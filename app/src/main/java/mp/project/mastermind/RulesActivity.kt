package mp.project.mastermind

//Idea schermata delle regole di gioco

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Button
import androidx.compose.material.ButtonDefaults
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Text
import androidx.compose.material.TopAppBar
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.em
import androidx.compose.ui.unit.sp


class RulesActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            AndroidLarge3()
        }
    }
}
// TODO DA MIGLIORARE VISUALIZZAZIONE TESTO

@Composable
fun AndroidLarge3(modifier: Modifier = Modifier) {
    Box(
        modifier = modifier
            .requiredWidth(width = 360.dp)
            .requiredHeight(height = 800.dp)
            .background(color = Color.White)
    ) {
        Box(
            modifier = Modifier
                .requiredWidth(width = 360.dp)
                .requiredHeight(height = 800.dp)
                .background(color = Color(0xff7b24bf)))
        Box(
            modifier = Modifier
                .align(alignment = Alignment.TopStart)
                .offset(x = 79.dp,
                    y = 589.dp)
                .requiredWidth(width = 203.dp)
                .requiredHeight(height = 59.dp)
                .clip(shape = RoundedCornerShape(18.dp))
                .background(color = Color(0xffb62fcc)))
        Button(
            onClick = { },
            colors = ButtonDefaults.buttonColors(backgroundColor = Color.White),
            modifier = Modifier
                .align(alignment = Alignment.TopStart)
                .offset(x = 102.dp,
                    y = 608.dp)
                .requiredWidth(width = 156.dp)
                .requiredHeight(height = 21.dp)){ }
        Text(
            text = "The aim of the game is to guess the exact sequence of colors generated by the computer.\n\nIn the game section you have 4 round boxes where you will have to select colors. \n\nTo guess you have suggestions available for each game, there are 10 games in total. \nThe suggestions are marked black if you have guessed the color and position of one of the boxes and yellow if you have only guessed the color",
            color = Color.White,
            textAlign = TextAlign.Center,
            lineHeight = 9.38.em,
            style = TextStyle(
                fontSize = 16.sp),
            modifier = Modifier
                .align(alignment = Alignment.TopStart)
                .offset(x = 58.dp,
                    y = 142.dp)
                .requiredWidth(width = 245.dp)
                .requiredHeight(height = 436.dp))
        Box(
            modifier = Modifier
                .align(alignment = Alignment.TopStart)
                .offset(x = 71.dp,
                    y = 48.dp)
                .requiredWidth(width = 219.dp)
                .requiredHeight(height = 65.dp)
                .clip(shape = RoundedCornerShape(18.dp))
                .background(color = Color(0xffd9d9d9)))
        Text(
            text = "RULES",
            color = Color(0xff7b24bf),
            textAlign = TextAlign.Center,
            lineHeight = 6.25.em,
            style = MaterialTheme.typography.headlineSmall,
            modifier = Modifier
                .align(alignment = Alignment.TopStart)
                .offset(x = 76.dp,
                    y = 62.dp)
                .requiredWidth(width = 208.dp))
    }
}

@Preview(widthDp = 360, heightDp = 800)
@Composable
private fun AndroidLarge3Preview() {
    AndroidLarge3(Modifier)
}

