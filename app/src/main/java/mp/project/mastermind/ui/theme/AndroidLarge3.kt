package mp.project.mastermind.ui.theme

import android.annotation.SuppressLint
import android.content.Intent
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.offset
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.requiredHeight
import androidx.compose.foundation.layout.requiredWidth
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Button
import androidx.compose.material.ButtonDefaults
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Text
import androidx.compose.material.Typography
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.em
import androidx.compose.ui.unit.sp
import mp.project.mastermind.MainActivity

class AndroidLarge3 {
    val Typography.headlineSmall: TextStyle
        get() = TextStyle(
            // Imposta qui gli attributi dello stile di testo desiderato
            fontSize = 16.sp,
            fontWeight = FontWeight.Bold,
            /* Altri attributi come fontFamily, lineHeight, etc. */
        )
@SuppressLint("NotConstructor")
@Composable
    fun AndroidLarge3(modifier: Modifier = Modifier) {
        val context = LocalContext.current
        Box(
            modifier = modifier
                .requiredWidth(width = 400.dp)
                .requiredHeight(height = 800.dp)
                .background(color = Color.White)
        ) {
            Box(
                modifier = Modifier
                    .requiredWidth(width = 400.dp)
                    .requiredHeight(height = 800.dp)
                    .background(color = Color(0xff7b24bf))
            )

            Box(
                modifier = Modifier
                    .align(alignment = Alignment.TopStart)
                    .offset(x = 71.dp, y = 48.dp)
                    .requiredWidth(width = 219.dp)
                    .requiredHeight(height = 65.dp)
                    .clip(shape = RoundedCornerShape(18.dp))
                    .background(color = Color(0xffd9d9d9))
            )

            Text(
                text = "RULES",
                color = Color(0xff7b24bf),
                textAlign = TextAlign.Center,
                lineHeight = 6.25.em,
                style = MaterialTheme.typography.headlineSmall,
                modifier = Modifier
                    .align(alignment = Alignment.TopStart)
                    .offset(x = 76.dp, y = 62.dp)
                    .requiredWidth(width = 208.dp)
            )

            Text(
                text = "The aim of the game is to guess the exact sequence of colors generated by the computer.\n\nIn the game section, there are 4 round boxes where you will have to select colors.\n\nFor each game, you have suggestions available. There are 10 games in total.\nThe suggestions are marked black if you have guessed the color and position of one of the boxes, and yellow if you have only guessed the color.",
                color = Color.White,
                textAlign = TextAlign.Center,
                lineHeight = 24.sp,
                fontSize = 16.sp,
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(horizontal = 16.dp, vertical = 16.dp)
                    .align(Alignment.TopStart)
                    .offset(
                        x = 0.dp,
                        y = 128.dp
                    ) // Regola l'offset verticale per posizionare il testo sotto "RULES"
            )


            Box(
                modifier = Modifier
                    .align(alignment = Alignment.TopStart)
                    .offset(
                        x = 51.dp,
                        y = 608.dp
                    )
                    .requiredWidth(width = 257.dp)
                    .requiredHeight(height = 34.dp)
            ) {
                Button(
                    onClick = {
                        val intent = Intent(context, MainActivity::class.java)
                        context.startActivity(intent)
                    },
                    colors = ButtonDefaults.buttonColors(backgroundColor = Color.Transparent),
                    modifier = Modifier.fillMaxSize()
                ) {
                    Text("OK", color = Color.White)
                }
            }
        }
    }

}